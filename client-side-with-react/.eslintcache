[{"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reportWebVitals.js":"1","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Register.js":"2","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Login.js":"3","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Dashboard.js":"4","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Profile.js":"5","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\App.js":"6","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reducers\\index.js":"7","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\sacrificeForm.js":"8","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\SacrificeForm.js":"9","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reducers\\auth.js":"10","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reducers\\year.js":"11","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\index.js":"12","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\MonthDisplay.js":"13","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\auth.js":"14","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\operations\\index.js":"15","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\actions\\index.js":"16","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\DaysDisplay.js":"17","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Day.js":"18","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Comment.js":"19","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Post.js":"20","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\ReverseProtectedRoute.js":"21","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\ProtectedRoute.js":"22","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\PickFilters.js":"23","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\PostPreview.js":"24","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\ViewPost.js":"25","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reducers\\posts.js":"26","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\NotFound.js":"27","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Home.js":"28"},{"size":362,"mtime":1609669508957,"results":"29","hashOfConfig":"30"},{"size":2421,"mtime":1609670482752,"results":"31","hashOfConfig":"30"},{"size":2227,"mtime":1610102917368,"results":"32","hashOfConfig":"30"},{"size":2885,"mtime":1611437017180,"results":"33","hashOfConfig":"30"},{"size":2544,"mtime":1611447390019,"results":"34","hashOfConfig":"30"},{"size":2331,"mtime":1611324898233,"results":"35","hashOfConfig":"30"},{"size":295,"mtime":1611413261408,"results":"36","hashOfConfig":"30"},{"size":3329,"mtime":1609746079474,"results":"37","hashOfConfig":"30"},{"size":22326,"mtime":1611456681277,"results":"38","hashOfConfig":"30"},{"size":1003,"mtime":1610110085297,"results":"39","hashOfConfig":"30"},{"size":4678,"mtime":1611417734021,"results":"40","hashOfConfig":"30"},{"size":884,"mtime":1609782121786,"results":"41","hashOfConfig":"30"},{"size":4870,"mtime":1610238774775,"results":"42","hashOfConfig":"30"},{"size":762,"mtime":1610103018458,"results":"43","hashOfConfig":"30"},{"size":27308,"mtime":1611439450881,"results":"44","hashOfConfig":"30"},{"size":1069,"mtime":1611417665559,"results":"45","hashOfConfig":"30"},{"size":253,"mtime":1610114563338,"results":"46","hashOfConfig":"30"},{"size":1964,"mtime":1611420058898,"results":"47","hashOfConfig":"30"},{"size":904,"mtime":1610223546468,"results":"48","hashOfConfig":"30"},{"size":4264,"mtime":1611426681355,"results":"49","hashOfConfig":"30"},{"size":1097,"mtime":1610223553038,"results":"50","hashOfConfig":"30"},{"size":1411,"mtime":1610223075274,"results":"51","hashOfConfig":"30"},{"size":2488,"mtime":1610239020266,"results":"52","hashOfConfig":"30"},{"size":4721,"mtime":1611438704932,"results":"53","hashOfConfig":"30"},{"size":2178,"mtime":1611437664296,"results":"54","hashOfConfig":"30"},{"size":237,"mtime":1611412518281,"results":"55","hashOfConfig":"30"},{"size":298,"mtime":1609669508886,"results":"56","hashOfConfig":"30"},{"size":1201,"mtime":1609669508873,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"3x41gg",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":2,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reportWebVitals.js",[],["123","124"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Register.js",["125","126"],"// import { useEffect, useState } from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport auth from '../components/auth'\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState } from \"react\";\r\nimport axios from 'axios'\r\n\r\nfunction Register(props) {\r\n    // console.log(props.auth)\r\n    const [login, setLogin] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(login, password)\r\n        axios.post('http://localhost:8080/register', {login: login, password: password, email: email})\r\n        .then(result => {\r\n            if (result.data.statusCode >= 200 && result.data.statusCode < 300) {\r\n                alert(result.data.msg)\r\n                props.history.push(\"/login\")\r\n            } else {\r\n                alert(result.data.msg)\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"all\">\r\n            <nav style={{backgroundColor: \"#FF9311\", borderBottom: \"solid 3px #FFF1CE\", padding: \"10px\"}}>\r\n                <h1 style={{margin: \"0\", fontSize: \"50px\", color: \"#FFF1CE\"}}>Friends Schedule</h1>\r\n            </nav>\r\n            <form onSubmit={(e) => handleSubmit(e)} style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                <label>Login</label>\r\n                <input type=\"text\" onChange={(e) => setLogin(e.target.value)}></input>\r\n                <label>Password</label>\r\n                <input type=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\r\n                <label>Email</label>\r\n                <input type=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Register</Button>\r\n            </form>\r\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={()=>{auth.register(()=>props.history.push(\"/login\"))}}>Register</Button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: () => dispatch(({type: \"LOG_IN\"})),\r\n        logout: () => dispatch(({type: \"LOG_OUT\"}))\r\n    }\r\n}\r\n  \r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);",["127","128"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Login.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Dashboard.js",["129","130","131"],"// import {connect} from \"react-redux\"\r\n// import { Redirect } from \"react-router-dom\"\r\nimport auth from '../components/auth'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport SacrificeForm from './SacrificeForm'\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport MonthDisplay from './MonthDisplay'\r\nimport operations from '../operations/index'\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction Dashboard(props) {\r\n    console.log(props.year)\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n\r\n    useEffect(()=>{\r\n        const today = new Date()\r\n        props.get_posts_from_year(today.getFullYear(), today.getMonth())\r\n    },[])\r\n    \r\n    \r\n    return (\r\n        <div className=\"all\">\r\n            <nav style={{backgroundColor: \"#FF9311\", borderBottom: \"solid 3px #FFF1CE\", padding: \"10px\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\r\n                <Link to=\"/profile\"><h1>Profile</h1></Link>\r\n                <h1 style={{margin: \"0\", fontSize: \"50px\", color: \"#FFF1CE\"}}>Friends Schedule</h1>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{props.logout(); auth.logout(()=>props.history.push(\"/\"))}}>Log out</Button>\r\n            </nav>\r\n            <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <h1>Dashboard</h1>  \r\n                <br/>\r\n                <SacrificeForm user={props.auth.user}/>\r\n                {/* <button onClick={()=>{props.nextMonth()}}>SNO</button> */}\r\n                {props.year.month_to_display ? <MonthDisplay/> : null}\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        month: state.displayedDays,\r\n        year: state.year,\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setYear: (year, month) => dispatch(operations.getYearAndMonth(year, month)),\r\n        logout: () => dispatch(operations.logout()),\r\n        // nextMonth: (month) => dispatch(({type: \"NEXT_MONTH\", payload: {month: month}})),\r\n        // prevMonth: (month) => dispatch(({type: \"PREV_MONTH\", payload: {month: month}})),\r\n        // nextYear: () => dispatch(({type: \"NEXT_YEAR\"})),\r\n        // prevYear: () => dispatch(({type: \"PREV_YEAR\"})),\r\n        // swapYear: (year, month) => dispatch(({type: \"SWAP\", payload: {year: year, month_to_display: month}}))\r\n        get_posts_from_year: (year, month) => dispatch(operations.get_posts_from_year(year, month))\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Profile.js",["132"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\App.js",["133","134"],"import './App.css';\nimport Login from './components/Login'\nimport Dashboard from './components/Dashboard'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport ReverseProtectedRoute from './components/ReverseProtectedRoute'\nimport NotFound from './components/NotFound'\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie'\nimport {useEffect} from 'react'\n// import {Link, Router} from 'react-router-dom'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport operations from './operations/index'\n\n\nimport Home from './components/Home'\nimport Profile from './components/Profile'\nimport Register from './components/Register'\nimport ViewPost from './components/ViewPost';\n\nfunction App(props) {\n\n  // useEffect(()=>{\n  //   const auth_state = Cookies.getJSON('auth')\n  //   console.log(auth_state)\n  //   if (auth_state !== undefined && auth_state.authenticated === true) {\n  //     // this.authenticated = true;\n  //     // this.user = auth_state.user;\n  //     props.login(auth_state.user)\n  //   } else {\n  //     // this.authenticated = false;\n  //     props.logout()\n  //   }\n  // }, [])\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        {/* <header>\n          <h1 style={{backgroundColor: \"lightgray\", margin: \"0\", borderBottom: \"solid black 2px\", padding: \"5px\"}}>Friends Schedule</h1>\n        </header> */}\n        <Switch>\n          <ReverseProtectedRoute exact path='/' component={Home}/>\n          <ReverseProtectedRoute exact path='/login' component={Login}/>\n          <ReverseProtectedRoute exact path='/register' component={Register}/>\n          {/* <ReverseProtectedRoute exact path='/register' component={Register}/> */}\n          <ProtectedRoute exact path='/profile' component={Profile}/>\n          <ProtectedRoute exact path='/dashboard' component={Dashboard}/>\n          <ProtectedRoute path=\"/posts/:postId\" component={ViewPost}/>\n          <Route path='*' component={NotFound}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n      auth: state.auth,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      login: (login) => dispatch(operations.login(login)),\n      logout: () => dispatch(operations.logout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reducers\\index.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\sacrificeForm.js",["135","136","137","138","139","140"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\SacrificeForm.js",["141","142","143","144","145","146","147","148","149","150","151","152"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reducers\\auth.js",["153","154","155"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reducers\\year.js",["156"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\index.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\MonthDisplay.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\auth.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\operations\\index.js",["157","158"],"import axios from 'axios'\r\nimport { set } from 'js-cookie';\r\nimport {setYearAndMonth, setMonth, logIN, logOUT, filterByAUTHOR, sortByDISLIKES, sortByLIKES, updateYearPosts} from '../actions'\r\n\r\nconst monthsNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n];\r\n\r\nconst filter_and_sorter = (day_to_modify, activeFilters) => {\r\n    // FILTERS\r\n    const day = {...day_to_modify}\r\n    if (activeFilters.filters.author) {\r\n        day.availablePeople.filter(post => post.author.includes(activeFilters.filters.author) ? true : false)\r\n    }\r\n    //SORTERS\r\n    if (activeFilters.sorters.likes !== null) {\r\n        if (activeFilters.sorters.likes === \"likes_inc\") {\r\n            console.log(day.availablePeople)\r\n            day.availablePeople.sort((postA, postB) => postA.likes - postB.likes)\r\n            console.log(day.availablePeople)\r\n        }\r\n        if (activeFilters.sorters.likes === \"likes_dic\") {\r\n            console.log(day.availablePeople)\r\n            day.availablePeople.sort((postA, postB) => postB.likes - postA.likes)\r\n            console.log(day.availablePeople)\r\n        }\r\n    }\r\n    if (activeFilters.sorters.dislikes !== null) {\r\n\r\n        if (activeFilters.sorters.dislikes === \"dislikes_inc\") {\r\n            console.log(day.availablePeople)\r\n            day.availablePeople.sort((postA, postB) => postB.likes - postA.likes)\r\n            console.log(day.availablePeople)\r\n        }\r\n        if (activeFilters.sorters.dislikes === \"dislikes_dic\") {\r\n            console.log(day.availablePeople)\r\n            day.availablePeople.sort((postA, postB) => postA.likes - postB.likes)\r\n            console.log(day.availablePeople)\r\n        }\r\n    }\r\n    return day\r\n}\r\n\r\nconst getYearAndMonth = (year, req_month) => async dispatch => {\r\n    console.log(year + req_month)\r\n    const year_obj = await axios.post(\"http://localhost:8080/get_year\", {year: year})\r\n    .then(result => {\r\n        console.log(result)\r\n        if (result.data.statusCode >= 200 && result.data.statusCode < 300) {\r\n            const obj = {\r\n                name: result.data.content.year,\r\n                months: result.data.content.months,\r\n                month_to_display: result.data.content.months.filter(month => month.name === req_month)[0],\r\n                month_to_display_and_apply_filters: result.data.content.months.filter(month => month.name === req_month)[0]\r\n            }\r\n            return obj\r\n        } else {\r\n            return null\r\n        }\r\n        \r\n    })\r\n    if (year_obj !== null) {\r\n        dispatch(setYearAndMonth(year_obj))\r\n    } else {\r\n        alert(\"YEAR NOT IN DB\")\r\n    }\r\n}\r\n\r\nconst changeMonth = (year, req_month) => async dispatch => {\r\n    dispatch(setMonth(req_month))\r\n}\r\n\r\nconst login = (login) => async dispatch => {\r\n    dispatch(logIN(login))\r\n}\r\n\r\nconst logout = () => async dispatch => {\r\n    dispatch(logOUT())\r\n}\r\n\r\nconst filterByAuthor = (author) => async dispatch => {\r\n    dispatch(filterByAUTHOR(author))\r\n}\r\n\r\nconst fetch = async (year, month) =>{\r\n    const z = await axios.post(\"http://localhost:8080/get_posts_from_year\", {year: year})\r\n    .then(result=>{\r\n        console.log(result.data.content)\r\n        const months = [\r\n            {\r\n                name: \"January\",\r\n                days: [\r\n                { day: 1, posts: [] },\r\n                { day: 2, posts: [] },\r\n                { day: 3, posts: [] },\r\n                { day: 4, posts: [] },\r\n                { day: 5, posts: [] },\r\n                { day: 6, posts: [] },\r\n                { day: 7, posts: [] },\r\n                { day: 8, posts: [] },\r\n                { day: 9, posts: [] },\r\n                { day: 10, posts: [] },\r\n                { day: 11, posts: [] },\r\n                { day: 12, posts: [] },\r\n                { day: 13, posts: [] },\r\n                { day: 14, posts: [] },\r\n                { day: 15, posts: [] },\r\n                { day: 16, posts: [] },\r\n                { day: 17, posts: [] },\r\n                { day: 18, posts: [] },\r\n                { day: 19, posts: [] },\r\n                { day: 20, posts: [] },\r\n                { day: 21, posts: [] },\r\n                { day: 22, posts: [] },\r\n                { day: 23, posts: [] },\r\n                { day: 24, posts: [] },\r\n                { day: 25, posts: [] },\r\n                { day: 26, posts: [] },\r\n                { day: 27, posts: [] },\r\n                { day: 28, posts: [] },\r\n                { day: 29, posts: [] },\r\n                { day: 30, posts: [] },\r\n                { day: 31, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"February\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"March\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                    { day: 31, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"April\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                ],  \r\n            },\r\n            {\r\n                name: \"May\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                    { day: 31, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"June\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"July\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                    { day: 31, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"August\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                    { day: 31, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"September\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"October\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                    { day: 31, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"November\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                ],\r\n            },\r\n            {\r\n                name: \"December\",\r\n                days: [\r\n                    { day: 1, posts: [] },\r\n                    { day: 2, posts: [] },\r\n                    { day: 3, posts: [] },\r\n                    { day: 4, posts: [] },\r\n                    { day: 5, posts: [] },\r\n                    { day: 6, posts: [] },\r\n                    { day: 7, posts: [] },\r\n                    { day: 8, posts: [] },\r\n                    { day: 9, posts: [] },\r\n                    { day: 10, posts: [] },\r\n                    { day: 11, posts: [] },\r\n                    { day: 12, posts: [] },\r\n                    { day: 13, posts: [] },\r\n                    { day: 14, posts: [] },\r\n                    { day: 15, posts: [] },\r\n                    { day: 16, posts: [] },\r\n                    { day: 17, posts: [] },\r\n                    { day: 18, posts: [] },\r\n                    { day: 19, posts: [] },\r\n                    { day: 20, posts: [] },\r\n                    { day: 21, posts: [] },\r\n                    { day: 22, posts: [] },\r\n                    { day: 23, posts: [] },\r\n                    { day: 24, posts: [] },\r\n                    { day: 25, posts: [] },\r\n                    { day: 26, posts: [] },\r\n                    { day: 27, posts: [] },\r\n                    { day: 28, posts: [] },\r\n                    { day: 29, posts: [] },\r\n                    { day: 30, posts: [] },\r\n                    { day: 31, posts: [] },\r\n                ],\r\n            }\r\n        ]\r\n        if (year % 4 === 0 || year % 400 === 0 ) {\r\n            months[1].days.push({ day: 29, posts: [] })\r\n        }\r\n\r\n        result.data.content.forEach(post=>{\r\n            const postDate = new Date(post.date)\r\n            months[postDate.getMonth()].days[postDate.getDate()-1].posts.push(post)\r\n        })\r\n        console.log(months)\r\n\r\n        const obj = {\r\n            name: year,\r\n            months: months,\r\n            month_to_display: months[month],\r\n            month_to_display_and_apply_filters: months[month],\r\n            posts: result.data.content\r\n        }\r\n        // dispatch(updateYearPosts(obj))\r\n        // dispatch(setYearAndMonth(obj))\r\n        console.log(\"OBIEKCIK\");\r\n        console.log(obj)\r\n        return obj\r\n    })\r\n    .catch(err=>{\r\n        console.log(err);\r\n        return null\r\n    })\r\n    return z\r\n}\r\nconst get_posts_from_year = (year, month) => async (dispatch) => {\r\n    // console.log(month)\r\n    console.log(\"FETCHING POSTS\")\r\n    const x = await fetch(year, month)\r\n    console.log(\"what is X\")\r\n    console.log(x)\r\n    if (x !== null) {\r\n        dispatch(setYearAndMonth(x))\r\n    } else {\r\n        alert(\"ERROR\")\r\n    }\r\n}\r\n\r\nconst sortByLikes = (type) => async (dispatch, state) => {\r\n    const year_state = state().year\r\n    if (type !== \"none\") {\r\n        year_state.activeFilters.sorters.likes = type\r\n    } else {\r\n        year_state.activeFilters.sorters.likes = null\r\n    }\r\n    year_state.month_to_display_and_apply_filters.days = year_state.month_to_display.days.map(day => filter_and_sorter(day, year_state.activeFilters))\r\n    // console.log(year_state)\r\n    dispatch(sortByLIKES(year_state))\r\n}\r\n\r\nconst sortByDislikes = (type) => async (dispatch, state) => {\r\n    const year_state = state().year\r\n    if (type !== \"none\") {\r\n        year_state.activeFilters.sorters.dislikes = type\r\n    } else {\r\n        year_state.activeFilters.sorters.dislikes = null\r\n    }\r\n    year_state.month_to_display_and_apply_filters.days = year_state.month_to_display.days.map(day => filter_and_sorter(day, year_state.activeFilters))\r\n    // console.log(year_state)\r\n    dispatch(sortByDISLIKES(year_state))\r\n}\r\n\r\nconst likePost = (id) => async (dispatch, state) => {\r\n    axios.post(\"http://localhost:8080/like_post\", {id: id})\r\n    .then( async result => {\r\n        console.log(result)\r\n        if (result.data.statusCode >= 200 && result.data.statusCode < 300) {\r\n            const year_state = state().year\r\n            console.log(year_state)\r\n            console.log(\"FETCHING POSTS\")\r\n            const x = await fetch(year_state.name, monthsNames.indexOf(year_state.month_to_display.name))\r\n            if (x !== null) {\r\n                dispatch(setYearAndMonth(x))\r\n            } else {\r\n                alert(\"ERROR\")\r\n            }\r\n        } else {\r\n            console.log(\"error\")\r\n        }\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n        alert(\"error\")\r\n    })\r\n}\r\n\r\nconst dislikePost = (id) => async (dispatch, state) => {\r\n    axios.post(\"http://localhost:8080/dislike_post\", {id: id})\r\n    .then( async result => {\r\n        console.log(result)\r\n        if (result.data.statusCode >= 200 && result.data.statusCode < 300) {\r\n            const year_state = state().year\r\n            console.log(year_state)\r\n            console.log(\"FETCHING POSTS\")\r\n            const x = await fetch(year_state.name, monthsNames.indexOf(year_state.month_to_display.name))\r\n            if (x !== null) {\r\n                dispatch(setYearAndMonth(x))\r\n            } else {\r\n                alert(\"ERROR\")\r\n            }\r\n        } else {\r\n            console.log(\"error\")\r\n        }\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n        alert(\"error\")\r\n    })\r\n}\r\n\r\nconst addComment = (id, content, author) => async (dispatch, state) => {\r\n    axios.post(\"http://localhost:8080/comment_post\", {\r\n        id: id,\r\n        comment: content,\r\n        author: author\r\n    })\r\n    .then(async result => {\r\n        if (result.data.statusCode >= 200 && result.data.statusCode < 300) {\r\n            const year_state = state().year\r\n            console.log(year_state)\r\n            console.log(\"FETCHING POSTS\")\r\n            const x = await fetch(year_state.name, monthsNames.indexOf(year_state.month_to_display.name))\r\n            if (x !== null) {\r\n                dispatch(setYearAndMonth(x))\r\n            } else {\r\n                alert(\"ERROR\")\r\n            }\r\n        } else {\r\n            console.log(\"error\")\r\n            alert(\"error\")\r\n        }\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n        alert(\"error\")\r\n    })\r\n}\r\n\r\nconst addPost = (data_object) => async (dispatch, state) => {\r\n    axios.post(\"http://localhost:8080/add_post\", data_object)\r\n    .then(async result => {\r\n        if (result.data.statusCode >= 200 && result.data.statusCode < 300) {\r\n            const year_state = state().year\r\n            console.log(year_state)\r\n            console.log(\"FETCHING POSTS\")\r\n            const x = await fetch(year_state.name, monthsNames.indexOf(year_state.month_to_display.name))\r\n            if (x !== null) {\r\n                dispatch(setYearAndMonth(x))\r\n            } else {\r\n                alert(\"ERROR\")\r\n            }\r\n        } else {\r\n            console.log(\"error\")\r\n            alert(\"error\")\r\n        }\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n        alert(\"error\")\r\n    })\r\n}\r\n\r\nconst removePost = (id) => async (dispatch, state) => {\r\n    axios.post(\"http://localhost:8080/remove_post\", {id: id,})\r\n    .then(async result => {\r\n        if (result.data.statusCode >= 200 && result.data.statusCode < 300) {\r\n            const year_state = state().year\r\n            console.log(year_state)\r\n            console.log(\"FETCHING POSTS\")\r\n            const x = await fetch(year_state.name, monthsNames.indexOf(year_state.month_to_display.name))\r\n            if (x !== null) {\r\n                dispatch(setYearAndMonth(x))\r\n            } else {\r\n                alert(\"ERROR\")\r\n            }\r\n        } else {\r\n            console.log(\"error\")\r\n            alert(\"error\")\r\n        }\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n        alert(\"error\")\r\n    })\r\n}\r\n\r\nconst operations = {\r\n    getYearAndMonth,\r\n    changeMonth,\r\n    login,\r\n    logout,\r\n    filterByAuthor,\r\n    sortByLikes,\r\n    sortByDislikes,\r\n    likePost,\r\n    dislikePost,\r\n    get_posts_from_year,\r\n    addComment,\r\n    removePost,\r\n    addPost\r\n}\r\n  \r\nexport default operations","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\actions\\index.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\DaysDisplay.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Day.js",["159"],"import { useEffect, useState } from \"react\"\r\nimport Post from \"./Post\"\r\nimport PostPreview from \"./PostPreview\"\r\n\r\nconst Day = (props) => {\r\n\r\n    const [hide, setHide] = useState(null)\r\n    useEffect(()=>{\r\n        // console.log(props.data.availablePeople.length)\r\n        if (props.data.posts.length > 2) {\r\n            setHide(true)\r\n        }\r\n    }, [props])\r\n\r\n    let toDisplay = []\r\n    const returnPosts = (posts) => {\r\n        // console.log(hide)\r\n        // if (posts.length >= 2) {\r\n        //     // setHide(true)\r\n        //     // console.log\r\n        // }\r\n        if (hide) {\r\n            // return (props.data.availablePeople.slice(2).map(ppl => <PostPreview post={ppl} day={props.data.day}/>))\r\n            toDisplay = [props.data.posts[0],props.data.posts[1]]\r\n        } else {\r\n            // return(props.data.availablePeople.map(ppl => <PostPreview post={ppl} day={props.data.day}/>))\r\n            toDisplay = props.data.posts\r\n        }\r\n        return(toDisplay.map(ppl => <PostPreview post={ppl} day={props.data.day}/>))\r\n    }\r\n\r\n    return (\r\n        <div style={{display: \"flex\", flexDirection: \"column\", width: \"100%\", borderTop: \"solid white 2px\", marginTop: \"10px\"}}>\r\n            <h1>{props.data.day}</h1>\r\n            {returnPosts(props.data.availablePeople)}\r\n            {/* {hide ? props.data.availablePeople.slice(2).map(ppl => <PostPreview post={ppl} day={props.data.day}/>) : props.data.availablePeople.map(ppl => <PostPreview post={ppl} day={props.data.day}/>)} */}\r\n            {hide !== null ? !hide ? <button onClick={()=>{setHide(true)}}>Hide</button> : <button onClick={()=>{setHide(false)}}>Show more</button> : null}\r\n            {/* {hide ? <button onClick={()=>{hide = true}}>Hide</button> : <button onClick={()=>{hide = false}}>Show more</button>} */}\r\n            {/* {props.data.availablePeople.map(ppl => <PostPreview post={ppl} day={props.data.day}/>)} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Day;\r\n","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Comment.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Post.js",["160"],"import Comment from \"./Comment\"\r\nimport axios from 'axios'\r\nimport operations from '../operations/index'\r\nimport { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nconst Post = (props) => {\r\n\r\n    const [comment_content, setComment_content] = useState(\"\")\r\n\r\n    const comment_div_style = {\r\n        border: \"solid black 2px\",\r\n        padding: \"5px\",\r\n        // width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"grey\",\r\n        marginBottom: \"10px\"\r\n    }\r\n\r\n    const handleAddComment = (e, id) => {\r\n        e.preventDefault()\r\n        // console.log(e.target)\r\n        // console.log(\"post id \"+id)\r\n        props.addComment(id, comment_content, props.auth.user)\r\n        // axios.post(\"http://localhost:8080/comment_post\", {\r\n        //     post_id: id,\r\n        //     comment: comment_content,\r\n        //     author: props.auth.user\r\n        // })\r\n        // .then(result => {\r\n        //     if (result.data.statusCode >= 200 && result.data.statusCode < 300) {\r\n        //         props.setYear(props.year.name, props.year.month_to_display.name)\r\n        //     } else {\r\n        //         console.log(\"error\")\r\n        //     }\r\n        // })\r\n        // .catch(err=>console.log(err))\r\n    } \r\n\r\n    const handleLike = (id) => {\r\n        // console.log(\"post id \"+id)\r\n        props.likePost(id)\r\n    }\r\n\r\n    const handleDisLike = (id) => {\r\n        // console.log(\"post id \"+id)\r\n        props.dislikePost(id)\r\n    }\r\n\r\n    const like_dislike_btn_style = {\r\n        background: \"none\",\r\n        border: \"none\",\r\n        \"&:hover\": {\r\n            background: \"black\",\r\n            // backgroundColor: \"black\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={comment_div_style}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                <div style={{width: \"20%\", display: \"flex\", flexDirection: \"column\"}}>\r\n                    <h2>{props.post.author} </h2>\r\n                    <h2>{new Date(props.post.date).getHours()}:{new Date(props.post.date).getMinutes()}</h2>\r\n                </div>\r\n                <div style={{border: \"solid black 1px\", paddiing: \"5px\", height: \"100%\", flexGrow: \"1\", wordWrap: \"break-word\"}}>\r\n                    <p>{props.post.content}</p>\r\n                </div>\r\n            </div>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", width:\"20%\", justifyContent: \"center\"}}>\r\n                <p>{props.post.likes}</p>\r\n                <button style={like_dislike_btn_style} onClick={()=>handleLike(props.post.id)}>👍</button>\r\n                <p>{props.post.dislikes}</p>\r\n                <button style={like_dislike_btn_style} onClick={()=>handleDisLike(props.post.id)}>👎</button>\r\n            </div>\r\n            {props.post.comments.map(comment => <Comment comment={comment}/>)}\r\n            <form onSubmit={(e) => handleAddComment(e, props.post.id)} style={{\r\n                widht: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                border: \"solid black 1px\"\r\n            }}>\r\n                <label>Add comment </label>\r\n                <input type=\"text\" style={{width: \"50%\"}} onChange={(e)=>{setComment_content(e.target.value)}}/>\r\n                <button type=\"submit\" style={{justifySelf:\"flex-end\"}}>Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        year: state.year,\r\n        auth: state.auth\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setYear: (year, month) => dispatch(operations.getYearAndMonth(year, month)),\r\n        likePost: (id) => dispatch(operations.likePost(id)),\r\n        dislikePost: (id) => dispatch(operations.dislikePost(id)),\r\n        addComment: (id, content, author) => dispatch(operations.addComment(id, content, author))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n\r\n// {\r\n//     author: \"\",\r\n//     content: \"\",\r\n//     likes: Int8Array,\r\n//     dislikes: Int8Array,\r\n//     comments: [\r\n//         {\r\n//             author: \"\",\r\n//             content: \"\",\r\n//             likes: Int8Array,\r\n//             dislikes: Int8Array,\r\n//         }\r\n//     ]\r\n// }","C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\ReverseProtectedRoute.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\PickFilters.js",["161","162"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\PostPreview.js",["163","164","165"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\ViewPost.js",["166"],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\reducers\\posts.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\NotFound.js",[],"C:\\Users\\Sieniu\\studia\\frontend_development\\React-Redux-Project\\client-side-with-react\\src\\components\\Home.js",["167","168"],"import {Link} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"all\">\r\n            <nav style={{backgroundColor: \"#FF9311\", borderBottom: \"solid 3px #FFF1CE\", padding: \"10px\"}}>\r\n                <h1 style={{margin: \"0\", fontSize: \"50px\", color: \"#FFF1CE\"}}>Friends Schedule</h1>\r\n            </nav>\r\n            <h2>Welcome to home page</h2>\r\n            <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n\r\n            </div>\r\n            {/* <Link to=\"/login\"><p>Log in</p></Link> */}\r\n            <Button variant=\"contained\" color=\"primary\" href=\"/login\">Log in</Button>\r\n            <br/>\r\n            <br/>\r\n            <Button variant=\"contained\" color=\"primary\" href=\"/register\">Register</Button>\r\n            {/* <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                <Link to=\"/login\"></Link>\r\n                <Button href=\"/login\">Log in</Button>\r\n                <Button href=\"/register\">Register</Button>\r\n            </ButtonGroup> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Home;",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":18},{"ruleId":"173","severity":1,"message":"177","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":12},{"ruleId":"169","replacedBy":"178"},{"ruleId":"171","replacedBy":"179"},{"ruleId":"173","severity":1,"message":"180","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":13},{"ruleId":"173","severity":1,"message":"181","line":16,"column":11,"nodeType":"175","messageId":"176","endLine":16,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":34,"column":7,"nodeType":"184","endLine":34,"endColumn":9,"suggestions":"185"},{"ruleId":"182","severity":1,"message":"183","line":26,"column":7,"nodeType":"184","endLine":26,"endColumn":9,"suggestions":"186"},{"ruleId":"173","severity":1,"message":"187","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":15},{"ruleId":"173","severity":1,"message":"188","line":9,"column":9,"nodeType":"175","messageId":"176","endLine":9,"endColumn":18},{"ruleId":"173","severity":1,"message":"180","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"173","severity":1,"message":"189","line":6,"column":12,"nodeType":"175","messageId":"176","endLine":6,"endColumn":22},{"ruleId":"190","severity":2,"message":"191","line":6,"column":41,"nodeType":"175","endLine":6,"endColumn":49},{"ruleId":"173","severity":1,"message":"181","line":8,"column":11,"nodeType":"175","messageId":"176","endLine":8,"endColumn":17},{"ruleId":"173","severity":1,"message":"192","line":28,"column":12,"nodeType":"175","messageId":"176","endLine":28,"endColumn":21},{"ruleId":"190","severity":2,"message":"191","line":28,"column":39,"nodeType":"175","endLine":28,"endColumn":47},{"ruleId":"173","severity":1,"message":"180","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"173","severity":1,"message":"193","line":6,"column":31,"nodeType":"175","messageId":"176","endLine":6,"endColumn":43},{"ruleId":"173","severity":1,"message":"194","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":16},{"ruleId":"173","severity":1,"message":"195","line":9,"column":9,"nodeType":"175","messageId":"176","endLine":9,"endColumn":18},{"ruleId":"173","severity":1,"message":"196","line":9,"column":20,"nodeType":"175","messageId":"176","endLine":9,"endColumn":26},{"ruleId":"173","severity":1,"message":"197","line":9,"column":28,"nodeType":"175","messageId":"176","endLine":9,"endColumn":36},{"ruleId":"173","severity":1,"message":"189","line":15,"column":12,"nodeType":"175","messageId":"176","endLine":15,"endColumn":22},{"ruleId":"173","severity":1,"message":"198","line":15,"column":24,"nodeType":"175","messageId":"176","endLine":15,"endColumn":37},{"ruleId":"173","severity":1,"message":"181","line":17,"column":11,"nodeType":"175","messageId":"176","endLine":17,"endColumn":17},{"ruleId":"173","severity":1,"message":"199","line":32,"column":14,"nodeType":"175","messageId":"176","endLine":32,"endColumn":26},{"ruleId":"173","severity":1,"message":"192","line":37,"column":12,"nodeType":"175","messageId":"176","endLine":37,"endColumn":21},{"ruleId":"173","severity":1,"message":"200","line":37,"column":23,"nodeType":"175","messageId":"176","endLine":37,"endColumn":35},{"ruleId":"173","severity":1,"message":"187","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":15},{"ruleId":"173","severity":1,"message":"177","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":12},{"ruleId":"173","severity":1,"message":"201","line":6,"column":9,"nodeType":"175","messageId":"176","endLine":6,"endColumn":10},{"ruleId":"173","severity":1,"message":"202","line":14,"column":11,"nodeType":"175","messageId":"176","endLine":14,"endColumn":28},{"ruleId":"173","severity":1,"message":"203","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":13},{"ruleId":"173","severity":1,"message":"204","line":3,"column":96,"nodeType":"175","messageId":"176","endLine":3,"endColumn":111},{"ruleId":"173","severity":1,"message":"205","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":12},{"ruleId":"173","severity":1,"message":"180","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":13},{"ruleId":"173","severity":1,"message":"206","line":15,"column":12,"nodeType":"175","messageId":"176","endLine":15,"endColumn":25},{"ruleId":"173","severity":1,"message":"207","line":15,"column":27,"nodeType":"175","messageId":"176","endLine":15,"endColumn":43},{"ruleId":"173","severity":1,"message":"208","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":15},{"ruleId":"173","severity":1,"message":"209","line":10,"column":29,"nodeType":"175","messageId":"176","endLine":10,"endColumn":47},{"ruleId":"173","severity":1,"message":"210","line":22,"column":11,"nodeType":"175","messageId":"176","endLine":22,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":14,"column":7,"nodeType":"184","endLine":14,"endColumn":9,"suggestions":"211"},{"ruleId":"173","severity":1,"message":"212","line":1,"column":9,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"173","severity":1,"message":"213","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":19},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.",["214"],["215"],"'axios' is defined but never used.","'months' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["216"],["217"],"'Cookies' is defined but never used.","'useEffect' is defined but never used.","'pickedDate' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"sacrificeForm\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'msgToDate' is assigned a value but never used.","'ErrorMessage' is defined but never used.","'ReactDOM' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'MenuItem' is defined but never used.","'setPickedDate' is assigned a value but never used.","'handleSubmit' is defined but never used.","'setMsgToDate' is assigned a value but never used.","'x' is assigned a value but never used.","'filter_and_sorter' is assigned a value but never used.","'set' is defined but never used.","'updateYearPosts' is defined but never used.","'Post' is defined but never used.","'author_filter' is assigned a value but never used.","'setAuthor_filter' is assigned a value but never used.","'Comment' is defined but never used.","'setComment_content' is assigned a value but never used.","'handleAddComment' is assigned a value but never used.",["218"],"'Link' is defined but never used.","'ButtonGroup' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"219","fix":"222"},"Update the dependencies array to be: [props]",{"range":"223","text":"224"},{"range":"225","text":"224"},{"range":"226","text":"224"},[914,916],"[props]",[954,956],[490,492]]